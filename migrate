#!/usr/local/bin/ruby

require 'active_record'
require 'json'

class Migrate
    def initialize()
        config = JSON::load(File.open(ARGV[0]))
        ActiveRecord::Base.establish_connection(
            :adapter => config['adapter'],
            :host => config['host'],
            :port => config['port'],
            :username => config['username'],
            :password => config['password'],
            :database => config['database']
        )
    end

    def create()
        begin
            ActiveRecord::Migration.create_table :tbladdresses do |table|
                table.integer :AddressID
                table.string :AddressLine1
                table.string :AddressLine2
                table.string :AddressNotes
                table.string :City
                table.Boolean :IsManual
                table.string :PostalCode
                table.timestamp :RADRAT
                table.string :State
                table.integer :StoreID
                table.integer :CASSAddressID
            end
            puts 'tbladdresses : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tbladdresses : already exists'
            else
                puts 'tbladdresses :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcassaddresses do |table|
                table.string :City
                table.float :DeliveryCharge
                table.float :DriverMoney
                table.string :EOCode
                table.integer :HighNumber
                table.integer :LowNumber
                table.string :PostalCode
                table.timestamp :RADRAT
                table.string :State
                table.integer :StoreID
                table.string :Street
                table.float :AddForSpecialty
            end
            puts 'tblcassaddresses : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcassaddresses : already exists'
            else
                puts 'tblcassaddresses :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcouponappliestos do |table|
                table.integer :ComboChoice
                table.integer :ComboQuantity
                table.integer :CouponAppliesToID
                table.integer :CouponID
                table.float :DollarOff
                table.float :FixedPrice
                table.float :MinimumPrice
                table.timestamp :RADRAT
                table.integer :SizeID
                table.integer :SpecialtyID
                table.integer :StyleID
                table.integer :UnitID
                table.integer :CouponDateRangeID
            end
            puts 'tblcouponappliestos : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcouponappliestos : already exists'
            else
                puts 'tblcouponappliestos :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcoupondateranges do |table|
                table.integer :CouponID
                table.timestamp :RADRAT
                table.timestamp :ValidFrom
                table.timestamp :ValidTo
                table.string :PromoCode
            end
            puts 'tblcoupondateranges : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcoupondateranges : already exists'
            else
                puts 'tblcoupondateranges :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcouponpromocodedateranges do |table|
                table.integer :PromoCodeDateRangeID
                table.timestamp :RADRAT
                table.timestamp :ValidFrom
                table.timestamp :ValidTo
                table.integer :CouponID
            end
            puts 'tblcouponpromocodedateranges : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcouponpromocodedateranges : already exists'
            else
                puts 'tblcouponpromocodedateranges :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcoupons do |table|
                table.integer :CouponTypeID
                table.string :Description
                table.float :DollarOff
                table.Boolean :IsFree
                table.float :MinimumPurchase
                table.float :PercentageOff
                table.timestamp :RADRAT
                table.string :ShortDescription
                table.integer :ShowOnWeb
                table.integer :ValidForDelivery
                table.integer :ValidForDineIn
                table.integer :ValidForInternetOrder
                table.integer :ValidForPickup
                table.integer :ValidForTelephoneOrder
                table.integer :ValidForWalkInOrder
                table.integer :CouponID
            end
            puts 'tblcoupons : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcoupons : already exists'
            else
                puts 'tblcoupons :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcouponspromocodes do |table|
                table.Boolean :IsMassMailer
                table.integer :MaxUses
                table.string :PromoCode
                table.timestamp :RADRAT
                table.integer :Uses
                table.timestamp :Birthdate
            end
            puts 'tblcouponspromocodes : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcouponspromocodes : already exists'
            else
                puts 'tblcouponspromocodes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblcustomers do |table|
                table.string :CellPhone
                table.integer :CustomerID
                table.string :EMail
                table.string :FAXPhone
                table.string :FirstName
                table.string :HomePhone
                table.Boolean :IsEMailList
                table.Boolean :IsTextList
                table.string :LastName
                table.Boolean :NoChecks
                table.string :Password
                table.integer :PrimaryAddressID
                table.timestamp :RADRAT
                table.string :WorkPhone
                table.Boolean :IsActive
            end
            puts 'tblcustomers : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblcustomers : already exists'
            else
                puts 'tblcustomers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblitems do |table|
                table.Boolean :IsInternet
                table.string :ItemDescription
                table.integer :ItemID
                table.string :ItemShortDescription
                table.integer :ItemSortOrder
                table.timestamp :RADRAT
                table.timestamp :EndDate
            end
            puts 'tblitems : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblitems : already exists'
            else
                puts 'tblitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblmarquees do |table|
                table.integer :MarqueeID
                table.string :MarqueeMain
                table.string :MarqueeSub
                table.timestamp :RADRAT
                table.timestamp :StartDate
                table.integer :HalfID
            end
            puts 'tblmarquees : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblmarquees : already exists'
            else
                puts 'tblmarquees :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblorderlineitems do |table|
                table.float :IdealItemCost
                table.float :IdealItemWeight
                table.integer :ItemID
                table.integer :OrderLineID
                table.integer :OrderLineItemID
                table.timestamp :RADRAT
                table.float :Cost
            end
            puts 'tblorderlineitems : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblorderlineitems : already exists'
            else
                puts 'tblorderlineitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblorderlines do |table|
                table.integer :CouponID
                table.float :Discount
                table.integer :Half1SauceID
                table.integer :Half1SauceModifierID
                table.integer :Half2SauceID
                table.integer :Half2SauceModifierID
                table.float :IdealCost
                table.float :IdealHalf1SauceCost
                table.float :IdealHalf1SauceWeight
                table.float :IdealHalf2SauceCost
                table.float :IdealHalf2SauceWeight
                table.float :IdealStandardCost
                table.float :IdealStyleCost
                table.float :IdealStyleWeight
                table.string :InternetDescription
                table.string :MPOReason
                table.integer :OrderID
                table.integer :OrderLineID
                table.string :OrderLineNotes
                table.integer :Quantity
                table.timestamp :RADRAT
                table.integer :SizeID
                table.integer :SpecialtyID
                table.integer :StyleID
                table.integer :UnitID
                table.float :IdealCost
            end
            puts 'tblorderlines : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblorderlines : already exists'
            else
                puts 'tblorderlines :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblorderlinesidealcosts do |table|
                table.float :IdealWeight
                table.integer :InventoryID
                table.integer :OrderLineID
                table.timestamp :RADRAT
                table.float :IdealSideCost
            end
            puts 'tblorderlinesidealcosts : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblorderlinesidealcosts : already exists'
            else
                puts 'tblorderlinesidealcosts :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblorderlinesides do |table|
                table.float :IdealSideWeight
                table.Boolean :IsFreeSide
                table.integer :OrderLineID
                table.integer :OrderLineSideID
                table.timestamp :RADRAT
                table.integer :SideID
                table.float :IdealTopperCost
            end
            puts 'tblorderlinesides : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblorderlinesides : already exists'
            else
                puts 'tblorderlinesides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblorderlinetoppers do |table|
                table.float :IdealTopperWeight
                table.integer :OrderLineID
                table.integer :OrderLineTopperID
                table.timestamp :RADRAT
                table.integer :TopperHalfID
                table.integer :TopperID
                table.integer :AccountID
            end
            puts 'tblorderlinetoppers : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblorderlinetoppers : already exists'
            else
                puts 'tblorderlinetoppers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblorders do |table|
                table.integer :AddressID
                table.integer :CustomerID
                table.string :CustomerName
                table.string :CustomerPhone
                table.integer :DailySequence
                table.float :DeliveryCharge
                table.float :DriverMoney
                table.integer :EditEmpID
                table.string :EditReason
                table.integer :EmpID
                table.timestamp :ExpectedDate
                table.string :IPAddress
                table.Boolean :IsPaid
                table.integer :OrderID
                table.string :OrderNotes
                table.integer :OrderStatusID
                table.integer :OrderTypeID
                table.timestamp :PaidDate
                table.string :PaymentAuthorization
                table.integer :PaymentEmpID
                table.string :PaymentReference
                table.integer :PaymentTypeID
                table.timestamp :RADRAT
                table.string :RefID
                table.timestamp :ReleaseDate
                table.integer :SessionID
                table.integer :StoreID
                table.timestamp :SubmitDate
                table.float :Tax
                table.float :Tax2
                table.float :Tip
                table.timestamp :TransactionDate
                table.timestamp :VoidDate
                table.integer :VoidEmpID
                table.string :VoidReason
                table.Boolean :IsActive
            end
            puts 'tblorders : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblorders : already exists'
            else
                puts 'tblorders :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblsauces do |table|
                table.Boolean :IsInternet
                table.timestamp :RADRAT
                table.string :SauceDescription
                table.integer :SauceID
                table.string :SauceShortDescription
                table.Boolean :IsActive
            end
            puts 'tblsauces : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblsauces : already exists'
            else
                puts 'tblsauces :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblsaucemodifiers do |table|
                table.timestamp :RADRAT
                table.string :SauceModifierDescription
                table.integer :SauceModifierID
                table.string :SauceModifierShortDescription
                table.Boolean :IsActive
            end
            puts 'tblsaucemodifiers : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblsaucemodifiers : already exists'
            else
                puts 'tblsaucemodifiers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblsidegroups do |table|
                table.timestamp :RADRAT
                table.string :SideGroupDescription
                table.integer :SideGroupID
                table.string :SideGroupShortDescription
                table.Boolean :IsActive
            end
            puts 'tblsidegroups : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblsidegroups : already exists'
            else
                puts 'tblsidegroups :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblsides do |table|
                table.timestamp :RADRAT
                table.string :SideDescription
                table.integer :SideID
                table.string :SideShortDescription
                table.Boolean :IsActive
            end
            puts 'tblsides : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblsides : already exists'
            else
                puts 'tblsides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblsizes do |table|
                table.timestamp :RADRAT
                table.string :SizeDescription
                table.integer :SizeID
                table.string :SizeShortDescription
                table.string :InternetDescription
            end
            puts 'tblsizes : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblsizes : already exists'
            else
                puts 'tblsizes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblspecialties do |table|
                table.Boolean :IsActive
                table.Boolean :IsInternet
                table.Boolean :NoBaseCheese
                table.timestamp :RADRAT
                table.integer :SauceID
                table.string :SpecialtyDescription
                table.integer :SpecialtyID
                table.string :SpecialtyShortDescription
                table.integer :StyleID
                table.integer :UnitID
                table.integer :BatchCount
            end
            puts 'tblspecialties : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblspecialties : already exists'
            else
                puts 'tblspecialties :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblstorereportdates do |table|
                table.string :BatchRefNumber
                table.float :BatchTotal
                table.string :CurrentStatus
                table.timestamp :RADRAT
                table.timestamp :ReportDate
                table.integer :StoreID
                table.integer :StoreReportID
                table.string :Address1
            end
            puts 'tblstorereportdates : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblstorereportdates : already exists'
            else
                puts 'tblstorereportdates :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblstores do |table|
                table.string :Address1
                table.string :Address2
                table.int :Phone
                table.Boolean :CheckOK
                table.string :City
                table.integer :CloseFri
                table.integer :CloseMon
                table.integer :CloseSat
                table.integer :CloseSun
                table.integer :CloseThu
                table.integer :CloseTue
                table.integer :CloseWed
                table.float :DefaultDeliveryCharge
                table.float :DefaultDriverMoney
                table.float :DeliveryMin
                table.integer :DistrictID
                table.integer :DMAID
                table.string :FriendlyLocation
                table.string :Hours
                table.Boolean :IsActive
                table.Boolean :IsDeliveryTaxable
                table.float :LaborTax
                table.float :Latitude
                table.float :Longitude
                table.string :MetaDescription
                table.string :NetworkIP
                table.integer :OpenFri
                table.integer :OpenMon
                table.integer :OpenSat
                table.integer :OpenSun
                table.integer :OpenThu
                table.integer :OpenTue
                table.integer :OpenWed
                table.integer :PayrollPeriodTypeID
                table.string :PayrollReportEmail
                table.string :PGWID
                table.string :PGWWebID
                table.string :PGWWebID2
                table.string :PostalCode
                table.timestamp :RADRAT
                table.Boolean :RequireDriverSwipe
                table.string :Serving
                table.string :State
                table.integer :StoreID
                table.string :StoreName
                table.float :TaxRate
                table.float :TaxRate2
                table.integer :TZOffset
                table.float :UnemploymentVariable
                table.Boolean :IsActive
            end
            puts 'tblstores : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblstores : already exists'
            else
                puts 'tblstores :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblstyles do |table|
                table.timestamp :RADRAT
                table.string :StyleDescription
                table.integer :StyleID
                table.string :StyleShortDescription
                table.string :StyleSpecialMessage
                table.Boolean :IsActive
            end
            puts 'tblstyles : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblstyles : already exists'
            else
                puts 'tblstyles :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tbltoppers do |table|
                table.timestamp :RADRAT
                table.string :TopperDescription
                table.integer :TopperID
                table.string :TopperShortDescription
                table.Boolean :AllowHalfItems
            end
            puts 'tbltoppers : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tbltoppers : already exists'
            else
                puts 'tbltoppers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblunits do |table|
                table.string :CustomDescription
                table.string :InternetDescription
                table.Boolean :IsActive
                table.Boolean :IsInternet
                table.timestamp :RADRAT
                table.string :UnitDescription
                table.integer :UnitID
                table.integer :UnitMenuSortOrder
                table.string :UnitShortDescription
                table.string :Address1
            end
            puts 'tblunits : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblunits : already exists'
            else
                puts 'tblunits :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :tblwebactivities do |table|
                table.string :Address2
                table.string :City
                table.timestamp :Created
                table.string :EMail
                table.string :IPAddress
                table.integer :OrderID
                table.integer :OrderTypeID
                table.string :PostalCode
                table.timestamp :RADRAT
                table.string :RefID
                table.integer :SessionID
                table.string :State
                table.integer :StoreID
                table.integer :WebActivityID
                table.integer :CouponID
            end
            puts 'tblwebactivities : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'tblwebactivities : already exists'
            else
                puts 'tblwebactivities :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelcouponstores do |table|
                table.timestamp :RADRAT
                table.integer :StoreID
                table.integer :AddressID
            end
            puts 'trelcouponstores : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelcouponstores : already exists'
            else
                puts 'trelcouponstores :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelcustomeraddresses do |table|
                table.string :CustomerAddressDescription
                table.string :CustomerAddressNotes
                table.integer :CustomerID
                table.timestamp :RADRAT
                table.Boolean :WasExtraDeliveryNotified
                table.Boolean :IsDefault
            end
            puts 'trelcustomeraddresses : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelcustomeraddresses : already exists'
            else
                puts 'trelcustomeraddresses :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelsidegroupsides do |table|
                table.timestamp :RADRAT
                table.integer :SideGroupID
                table.integer :SidesID
                table.timestamp :RADRAT
            end
            puts 'trelsidegroupsides : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelsidegroupsides : already exists'
            else
                puts 'trelsidegroupsides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelsizestyles do |table|
                table.integer :SizeID
                table.integer :StyleID
                table.integer :ItemID
            end
            puts 'trelsizestyles : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelsizestyles : already exists'
            else
                puts 'trelsizestyles :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelspecialtyitems do |table|
                table.timestamp :RADRAT
                table.integer :SpecialtyID
                table.integer :SpecialtyItemQuantity
                table.integer :Quantity
            end
            puts 'trelspecialtyitems : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelspecialtyitems : already exists'
            else
                puts 'trelspecialtyitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelspecialtysizesidegroups do |table|
                table.timestamp :RADRAT
                table.integer :SideGroupID
                table.integer :SizeID
                table.integer :SpecialtyID
                table.integer :ItemCount
            end
            puts 'trelspecialtysizesidegroups : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelspecialtysizesidegroups : already exists'
            else
                puts 'trelspecialtysizesidegroups :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelstoreitems do |table|
                table.integer :ItemID
                table.float :OnSidePrice
                table.timestamp :RADRAT
                table.integer :StoreID
                table.timestamp :RADRAT
            end
            puts 'trelstoreitems : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelstoreitems : already exists'
            else
                puts 'trelstoreitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelstoresides do |table|
                table.integer :SideID
                table.float :SidePrice
                table.integer :StoreID
                table.timestamp :RADRAT
            end
            puts 'trelstoresides : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelstoresides : already exists'
            else
                puts 'trelstoresides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelstoresizestyles do |table|
                table.integer :SizeID
                table.integer :StoreID
                table.integer :StyleID
                table.float :StyleSurcharge
                table.timestamp :RADRAT
            end
            puts 'trelstoresizestyles : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelstoresizestyles : already exists'
            else
                puts 'trelstoresizestyles :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelstorespecialties do |table|
                table.integer :SpecialtyID
                table.integer :StoreID
                table.Boolean :IsTaxable
            end
            puts 'trelstorespecialties : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelstorespecialties : already exists'
            else
                puts 'trelstorespecialties :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelstoreunitsizes do |table|
                table.float :PerAdditionalItemPrice
                table.float :PercentSpecialtyItemVariance
                table.timestamp :RADRAT
                table.integer :SizeID
                table.float :SpecialtyBasePrice
                table.integer :SpecialtyNumberIncludedItems
                table.float :StandardBasePrice
                table.integer :StandardNumberIncludedItems
                table.integer :StoreID
                table.integer :UnitID
                table.Boolean :FreeItemFlag
            end
            puts 'trelstoreunitsizes : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelstoreunitsizes : already exists'
            else
                puts 'trelstoreunitsizes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelunititems do |table|
                table.Boolean :IsBaseCheese
                table.Boolean :IsCheese
                table.Boolean :IsExtraCheese
                table.integer :ItemID
                table.timestamp :RADRAT
                table.integer :UnitID
                table.integer :UnitItemPrintOrder
                table.timestamp :RADRAT
            end
            puts 'trelunititems : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelunititems : already exists'
            else
                puts 'trelunititems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelunitsauces do |table|
                table.integer :SauceID
                table.integer :UnitID
                table.timestamp :RADRAT
            end
            puts 'trelunitsauces : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelunitsauces : already exists'
            else
                puts 'trelunitsauces :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelunitsides do |table|
                table.integer :SideID
                table.integer :UnitID
                table.timestamp :RADRAT
            end
            puts 'trelunitsides : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelunitsides : already exists'
            else
                puts 'trelunitsides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelunitsizes do |table|
                table.integer :SizeID
                table.integer :UnitID
                table.integer :Quantity
            end
            puts 'trelunitsizes : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelunitsizes : already exists'
            else
                puts 'trelunitsizes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelunitsizesidegroups do |table|
                table.timestamp :RADRAT
                table.integer :SideGroupID
                table.integer :SizeID
                table.integer :UnitID
                table.timestamp :RADRAT
            end
            puts 'trelunitsizesidegroups : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelunitsizesidegroups : already exists'
            else
                puts 'trelunitsizesidegroups :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.create_table :trelunitstyles do |table|
                table.integer :StyleID
                table.integer :UnitID
                table.Boolean :IsBeforeItems
            end
            puts 'trelunitstyles : Created'
        rescue => exception
            if(exception.inspect =~ /already exists/)
                puts 'trelunitstyles : already exists'
            else
                puts 'trelunitstyles :' + exception.inspect
            end
        end

    end

    def delete()
        begin
            ActiveRecord::Migration.drop_table :tbladdresses
            puts 'tbladdresses : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tbladdresses : does not exist'
            else
                puts 'tbladdresses :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcassaddresses
            puts 'tblcassaddresses : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcassaddresses : does not exist'
            else
                puts 'tblcassaddresses :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcouponappliestos
            puts 'tblcouponappliestos : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcouponappliestos : does not exist'
            else
                puts 'tblcouponappliestos :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcoupondateranges
            puts 'tblcoupondateranges : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcoupondateranges : does not exist'
            else
                puts 'tblcoupondateranges :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcouponpromocodedateranges
            puts 'tblcouponpromocodedateranges : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcouponpromocodedateranges : does not exist'
            else
                puts 'tblcouponpromocodedateranges :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcoupons
            puts 'tblcoupons : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcoupons : does not exist'
            else
                puts 'tblcoupons :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcouponspromocodes
            puts 'tblcouponspromocodes : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcouponspromocodes : does not exist'
            else
                puts 'tblcouponspromocodes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblcustomers
            puts 'tblcustomers : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblcustomers : does not exist'
            else
                puts 'tblcustomers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblitems
            puts 'tblitems : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblitems : does not exist'
            else
                puts 'tblitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblmarquees
            puts 'tblmarquees : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblmarquees : does not exist'
            else
                puts 'tblmarquees :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblorderlineitems
            puts 'tblorderlineitems : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblorderlineitems : does not exist'
            else
                puts 'tblorderlineitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblorderlines
            puts 'tblorderlines : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblorderlines : does not exist'
            else
                puts 'tblorderlines :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblorderlinesidealcosts
            puts 'tblorderlinesidealcosts : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblorderlinesidealcosts : does not exist'
            else
                puts 'tblorderlinesidealcosts :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblorderlinesides
            puts 'tblorderlinesides : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblorderlinesides : does not exist'
            else
                puts 'tblorderlinesides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblorderlinetoppers
            puts 'tblorderlinetoppers : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblorderlinetoppers : does not exist'
            else
                puts 'tblorderlinetoppers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblorders
            puts 'tblorders : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblorders : does not exist'
            else
                puts 'tblorders :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblsauces
            puts 'tblsauces : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblsauces : does not exist'
            else
                puts 'tblsauces :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblsaucemodifiers
            puts 'tblsaucemodifiers : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblsaucemodifiers : does not exist'
            else
                puts 'tblsaucemodifiers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblsidegroups
            puts 'tblsidegroups : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblsidegroups : does not exist'
            else
                puts 'tblsidegroups :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblsides
            puts 'tblsides : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblsides : does not exist'
            else
                puts 'tblsides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblsizes
            puts 'tblsizes : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblsizes : does not exist'
            else
                puts 'tblsizes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblspecialties
            puts 'tblspecialties : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblspecialties : does not exist'
            else
                puts 'tblspecialties :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblstorereportdates
            puts 'tblstorereportdates : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblstorereportdates : does not exist'
            else
                puts 'tblstorereportdates :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblstores
            puts 'tblstores : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblstores : does not exist'
            else
                puts 'tblstores :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblstyles
            puts 'tblstyles : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblstyles : does not exist'
            else
                puts 'tblstyles :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tbltoppers
            puts 'tbltoppers : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tbltoppers : does not exist'
            else
                puts 'tbltoppers :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblunits
            puts 'tblunits : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblunits : does not exist'
            else
                puts 'tblunits :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :tblwebactivities
            puts 'tblwebactivities : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'tblwebactivities : does not exist'
            else
                puts 'tblwebactivities :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelcouponstores
            puts 'trelcouponstores : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelcouponstores : does not exist'
            else
                puts 'trelcouponstores :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelcustomeraddresses
            puts 'trelcustomeraddresses : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelcustomeraddresses : does not exist'
            else
                puts 'trelcustomeraddresses :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelsidegroupsides
            puts 'trelsidegroupsides : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelsidegroupsides : does not exist'
            else
                puts 'trelsidegroupsides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelsizestyles
            puts 'trelsizestyles : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelsizestyles : does not exist'
            else
                puts 'trelsizestyles :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelspecialtyitems
            puts 'trelspecialtyitems : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelspecialtyitems : does not exist'
            else
                puts 'trelspecialtyitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelspecialtysizesidegroups
            puts 'trelspecialtysizesidegroups : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelspecialtysizesidegroups : does not exist'
            else
                puts 'trelspecialtysizesidegroups :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelstoreitems
            puts 'trelstoreitems : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelstoreitems : does not exist'
            else
                puts 'trelstoreitems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelstoresides
            puts 'trelstoresides : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelstoresides : does not exist'
            else
                puts 'trelstoresides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelstoresizestyles
            puts 'trelstoresizestyles : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelstoresizestyles : does not exist'
            else
                puts 'trelstoresizestyles :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelstorespecialties
            puts 'trelstorespecialties : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelstorespecialties : does not exist'
            else
                puts 'trelstorespecialties :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelstoreunitsizes
            puts 'trelstoreunitsizes : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelstoreunitsizes : does not exist'
            else
                puts 'trelstoreunitsizes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelunititems
            puts 'trelunititems : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelunititems : does not exist'
            else
                puts 'trelunititems :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelunitsauces
            puts 'trelunitsauces : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelunitsauces : does not exist'
            else
                puts 'trelunitsauces :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelunitsides
            puts 'trelunitsides : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelunitsides : does not exist'
            else
                puts 'trelunitsides :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelunitsizes
            puts 'trelunitsizes : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelunitsizes : does not exist'
            else
                puts 'trelunitsizes :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelunitsizesidegroups
            puts 'trelunitsizesidegroups : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelunitsizesidegroups : does not exist'
            else
                puts 'trelunitsizesidegroups :' + exception.inspect
            end
        end

        begin
            ActiveRecord::Migration.drop_table :trelunitstyles
            puts 'trelunitstyles : Deleted'
        rescue => exception
            if(exception.inspect =~ /Unknown table/)
                puts 'trelunitstyles : does not exist'
            else
                puts 'trelunitstyles :' + exception.inspect
            end
        end

    end

end
if(ARGV.length != 2)
    puts "Usage: #{$0} <config.json> [create|delete|reset]"
    exit -1
end
case ARGV[1]
    when "create"
        Migrate.new.create
    when "delete"
        Migrate.new.delete
    when "reset"
        Migrate.new.delete
        Migrate.new.create
end
